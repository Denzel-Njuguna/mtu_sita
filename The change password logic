
    void changePassword() {
        // Implementation of change password logic
        
    Credentials loginUser;
    cout << "\nChanging password...\n";
    cout << "Enter your username: ";
    cin >> loginUser.userName;

    // Prompt user to enter current password
    cout << "Enter your current password: ";
    cin >> loginUser.passWord;

    // Verify login credentials
    if (login()) {
        // Prompt user to enter new password
        string newPassword;
        cout << "Enter your new password: ";
        cin >> newPassword;

        // Update password in credentials file
        ofstream credentialsFile("customerCredentials.txt");
        if (credentialsFile.is_open()) {
            credentialsFile << loginUser.userName << "," << newPassword << endl;
            credentialsFile.close();
            cout << "Password changed successfully!\n";
        } else {
            cout << "Error: Could not open credentials file\n";
        }
    } else {
        cout << "Incorrect username or password. Password change failed.\n";
    }
      
    }


// i improved it to 

void changePassword() {
    Credentials loginUser;
    cout << "\nChanging password...\n";
    cout << "Enter your username: ";
    cin >> loginUser.userName;

    // Prompt user to enter current password
    cout << "Enter your current password: ";
    cin >> loginUser.passWord;
    ifstream credentialsFile("customerCredentials.txt");
    if (credentialsFile.is_open()) {
        string line;
        bool found = false;
        while (getline(credentialsFile, line)) {
            size_t commaPos = line.find(',');
            string username = line.substr(0, commaPos);
            string password = line.substr(commaPos + 1);

            if (loginUser.userName == username && loginUser.passWord == password) {
                found = true;
                // Prompt user to enter new password
                string newPassword;
                cout << "Enter your new password: ";
                cin >> newPassword;

                // Update password in memory
                loginUser.passWord = newPassword;
            }
        }
        credentialsFile.close();
        if (found) {
            // Open the file in append mode and update the password
            ofstream credentialsFile("customerCredentials.txt", ios::app);
            if (credentialsFile.is_open()) {
                // Find the line corresponding to the user and replace the password
                ifstream tempFile("tempFile.txt");
                if (tempFile.is_open()) {
                    while (getline(tempFile, line)) {
                        size_t commaPos = line.find(',');
                        string tempUsername = line.substr(0, commaPos);
                        if (tempUsername != loginUser.userName) {
                            credentialsFile << line << endl;
                        } else {
                            credentialsFile << loginUser.userName << "," << loginUser.passWord << endl;
                        }
                    }
                    tempFile.close();
                    credentialsFile.close();
                    remove("customerCredentials.txt");
                    rename("tempFile.txt", "customerCredentials.txt");
                    cout << "Password changed successfully!\n";
                } else {
                    cout << "Error: Could not create temporary file\n";
                }
            } else {
                cout << "Error: Could not open credentials file for writing\n";
            }
        } else {
            cout << "Incorrect username or password. Password change failed.\n";
        }
  
    }
}

// but it didn't work, through research i did this 

void changePassword() {
    Credentials loginUser;
    cout << "\nChanging password...\n";
    cout << "Enter your username: ";
    cin >> loginUser.userName;

    // Prompt user to enter current password
    cout << "Enter your current password: ";
    cin >> loginUser.passWord;
    
    // Check if the user exists
    if (!checkIfUserExists(loginUser)) {
        cout << "Invalid username or password." << endl;
        return;
    }

    // Now ask the user for the new password
    cout << "Enter your new password: ";
    cin >> loginUser.newPassWord;

    std::ifstream inputFile("customerCredentials.txt");
    std::stringstream buffer;

    // Read the whole file into a buffer stream
    buffer << inputFile.rdbuf();

    // Close the file since we don't need it anymore
    inputFile.close();

    // Get the contents of the buffer as a single string
    std::string strContents = buffer.str();

    // Replace the existing line with the new information
    std::ostringstream outputStringStream;
    outputStringStream << strContents;
    size_t pos = 0;
    while ((pos = strContents.find("\n" + loginUser.userName + ",", pos)) != std::string::npos) {
        // Found the correct line, now add the new password
        outputStringStream << "\n" << loginUser.userName << "," << loginUser.newPassWord;
        pos += loginUser.userName.length() + 2; // Skip past the \n and , characters
    }

    // Write the modified string back to the file
    std::ofstream outputFile("customerCredentials.txt");
    outputFile << outputStringStream.str();
    outputFile.close();
}

//which also didn't work so i did this 
void changePassword() {
    Credentials loginUser;
    bool validCredentials = false;

    std::cout << "\nChanging password...\n";
    std::cout << "Enter your username: ";
    std::cin >> loginUser.userName;

    // Prompt user to enter current password
    std::cout << "Enter your current password: ";
    std::cin >> loginUser.passWord;

    std::ifstream credentialsFileIn("customerCredentials.txt");
    if (credentialsFileIn.is_open()) {
        std::ofstream tempFileOut("tempCredentials.txt");
        if (tempFileOut.is_open()) {
            std::string line;
            while (getline(credentialsFileIn, line)) {
                size_t commaPos = line.find(',');
                std::string username = line.substr(0, commaPos);
                std::string password = line.substr(commaPos + 1);

                if (loginUser.userName == username && loginUser.passWord == password) {
                    validCredentials = true;
                    // Prompt user to enter new password
                    std::string newPassword;
                    std::cout << "Enter your new password: ";
                    std::cin >> newPassword;
                    tempFileOut << loginUser.userName << "," << newPassword << std::endl;
                } else {
                    tempFileOut << line << std::endl;
                }
            }
            tempFileOut.close();
            credentialsFileIn.close();

            if (validCredentials) {
                // Rename the temporary file to the original file
                if (std::rename("tempCredentials.txt", "customerCredentials.txt") == 0) {
                    std::cout << "Password changed successfully!\n";
                } else {
                    std::cout << "Error: Could not rename temporary file\n";
                }
            } else {
                std::cout << "Incorrect username or password. Password change failed.\n";
                // Remove the temporary file if the password change failed
                std::remove("tempCredentials.txt");
            }
        } else {
            std::cout << "Error: Could not open temporary file\n";
        }
    } else {
        std::cout << "Error: Could not open credentials file\n";
    }
}